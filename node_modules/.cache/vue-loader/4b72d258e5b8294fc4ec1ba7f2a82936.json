{"remainingRequest":"/usr/local/share/.config/yarn/global/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/alan/Documents/Projects/vue_learn/gridComponent.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/alan/Documents/Projects/vue_learn/gridComponent.vue","mtime":1529272443879},{"path":"/usr/local/share/.config/yarn/global/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/usr/local/share/.config/yarn/global/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/usr/local/share/.config/yarn/global/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: \"gridComponent\",\n    data() {\n        return {\n            input:\"\",\n            columns:[\"Name\",\"Power\"],\n            gridData: [{\n                    name: 'Chuck Norris',\n                    power: Infinity\n                },\n                {\n                    name: 'Bruce Lee',\n                    power: 9000\n                },\n                {\n                    name: 'Jackie Chan',\n                    power: 7000\n                },\n                {\n                    name: 'Jet Li',\n                    power: 8000\n                }\n            ],\n            orders:{name:1,power:1}\n        }\n    },\n    computed:{\n        displayData: function(){\n            var reg = \".*\"+this.input+\".*\"\n            if(this.input!=\"\"){\n                var result=[]\n                this.gridData.forEach(function(data){\n                    if(data.name.toLowerCase().search(reg)!=-1){\n                        result.push(data)\n                    }\n                })\n                return result\n            }else{\n                return this.gridData\n            }\n        }\n    },\n    methods:{\n        sort:function(key){\n            var order = this.orders[key]\n            this.orders[key] = order*(-1)\n            this.gridData.sort(function(a,b){\n                a=a[key]\n                b=b[key]\n                return (a === b ? 0 : a > b ? 1 : -1) * order \n            })\n        }\n    }\n}\n",{"version":3,"sources":["gridComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"gridComponent.vue","sourceRoot":".","sourcesContent":["<template>\n <div>\n     <div>\n        <label for=\"search\">search</label>\n        <input type=\"text\" id=\"search\" v-model=\"input\">\n     </div>\n     <table>\n        <thead>\n            <tr >\n                <th v-for=\"column in columns\" :key=\"column.id\" @click=\"sort(column.toLowerCase())\">{{column}}</th>\n            </tr>\n        </thead>\n         <tbody v-for=\"data in displayData\" :key=\"data.id\">\n             <tr>\n                 <td v-for=\"column in columns\" :key=\"column.id\">{{data[column.toLowerCase()]}}</td>\n             </tr>\n         </tbody>\n     </table>\n </div>\n</template>\n\n<script>\n    export default {\n        name: \"gridComponent\",\n        data() {\n            return {\n                input:\"\",\n                columns:[\"Name\",\"Power\"],\n                gridData: [{\n                        name: 'Chuck Norris',\n                        power: Infinity\n                    },\n                    {\n                        name: 'Bruce Lee',\n                        power: 9000\n                    },\n                    {\n                        name: 'Jackie Chan',\n                        power: 7000\n                    },\n                    {\n                        name: 'Jet Li',\n                        power: 8000\n                    }\n                ],\n                orders:{name:1,power:1}\n            }\n        },\n        computed:{\n            displayData: function(){\n                var reg = \".*\"+this.input+\".*\"\n                if(this.input!=\"\"){\n                    var result=[]\n                    this.gridData.forEach(function(data){\n                        if(data.name.toLowerCase().search(reg)!=-1){\n                            result.push(data)\n                        }\n                    })\n                    return result\n                }else{\n                    return this.gridData\n                }\n            }\n        },\n        methods:{\n            sort:function(key){\n                var order = this.orders[key]\n                this.orders[key] = order*(-1)\n                this.gridData.sort(function(a,b){\n                    a=a[key]\n                    b=b[key]\n                    return (a === b ? 0 : a > b ? 1 : -1) * order \n                })\n            }\n        }\n    }\n</script>"]}]}